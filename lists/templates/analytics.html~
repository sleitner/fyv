{% extends 'basenoj.html' %}

{% block other_css %}
    <link href="/static/nv.d3.css" rel="stylesheet" media="screen">
{% endblock %}
{% block header_text %}{% endblock %}
{% block middle_text %}

<h2>analytics</h2> <p>
This placeholder plot comes from
<a href="http://nvd3.org/examples/cumulativeLine.html">NVD3</a>. Look here, in future, for voter related visualizations and analytics.

<style>
#chart svg {
  height: 400px;
}
</style>
<div id="chart">
  <svg></svg>
</div>

{% endblock %}
{% block form_action %}{% endblock %}
{% block extra_content %}{% endblock %}
{% block other_js %} 
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="/static/nv.d3.min.js"></script>
<script>
d3.json('/static/cumulativeLineData.json', function(data) {
  nv.addGraph(function() {
    var chart = nv.models.cumulativeLineChart()
                  .x(function(d) { return d[0] })
                  .y(function(d) { return d[1]/100 }) //adjusting, 100% is 1.00, not 100 as it is in the data
                  .color(d3.scale.category10().range())
                  .useInteractiveGuideline(true)
                  ;

     chart.xAxis
        .tickValues([1078030800000,1122782400000,1167541200000,1251691200000])
        .tickFormat(function(d) {
            return d3.time.format('%x')(new Date(d))
          });

    chart.yAxis
        .tickFormat(d3.format(',.1%'));

    d3.select('#chart svg')
        .datum(data)
        .call(chart);

    //TODO: Figure out a good way to do this automatically
    nv.utils.windowResize(chart.update);

    return chart;
  });
});

</script>
{% endblock %}

